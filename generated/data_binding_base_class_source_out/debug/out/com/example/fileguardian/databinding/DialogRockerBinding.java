// Generated by view binder compiler. Do not edit!
package com.example.fileguardian.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fileguardian.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogRockerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnBackspace;

  @NonNull
  public final ImageButton btnQuestion;

  @NonNull
  public final Button btnRockerNegative;

  @NonNull
  public final Button btnRockerPositive;

  @NonNull
  public final CardView cardPassword;

  @NonNull
  public final CardView cardPasswordText;

  @NonNull
  public final ConstraintLayout constraintLayoutCross;

  @NonNull
  public final ImageView cross;

  @NonNull
  public final ImageView rocker;

  @NonNull
  public final TextView tvPassword;

  @NonNull
  public final TextView tvPasswordHint;

  private DialogRockerBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton btnBackspace,
      @NonNull ImageButton btnQuestion, @NonNull Button btnRockerNegative,
      @NonNull Button btnRockerPositive, @NonNull CardView cardPassword,
      @NonNull CardView cardPasswordText, @NonNull ConstraintLayout constraintLayoutCross,
      @NonNull ImageView cross, @NonNull ImageView rocker, @NonNull TextView tvPassword,
      @NonNull TextView tvPasswordHint) {
    this.rootView = rootView;
    this.btnBackspace = btnBackspace;
    this.btnQuestion = btnQuestion;
    this.btnRockerNegative = btnRockerNegative;
    this.btnRockerPositive = btnRockerPositive;
    this.cardPassword = cardPassword;
    this.cardPasswordText = cardPasswordText;
    this.constraintLayoutCross = constraintLayoutCross;
    this.cross = cross;
    this.rocker = rocker;
    this.tvPassword = tvPassword;
    this.tvPasswordHint = tvPasswordHint;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogRockerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogRockerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_rocker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogRockerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBackspace;
      ImageButton btnBackspace = ViewBindings.findChildViewById(rootView, id);
      if (btnBackspace == null) {
        break missingId;
      }

      id = R.id.btnQuestion;
      ImageButton btnQuestion = ViewBindings.findChildViewById(rootView, id);
      if (btnQuestion == null) {
        break missingId;
      }

      id = R.id.btnRockerNegative;
      Button btnRockerNegative = ViewBindings.findChildViewById(rootView, id);
      if (btnRockerNegative == null) {
        break missingId;
      }

      id = R.id.btnRockerPositive;
      Button btnRockerPositive = ViewBindings.findChildViewById(rootView, id);
      if (btnRockerPositive == null) {
        break missingId;
      }

      id = R.id.cardPassword;
      CardView cardPassword = ViewBindings.findChildViewById(rootView, id);
      if (cardPassword == null) {
        break missingId;
      }

      id = R.id.cardPasswordText;
      CardView cardPasswordText = ViewBindings.findChildViewById(rootView, id);
      if (cardPasswordText == null) {
        break missingId;
      }

      id = R.id.constraintLayoutCross;
      ConstraintLayout constraintLayoutCross = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayoutCross == null) {
        break missingId;
      }

      id = R.id.cross;
      ImageView cross = ViewBindings.findChildViewById(rootView, id);
      if (cross == null) {
        break missingId;
      }

      id = R.id.rocker;
      ImageView rocker = ViewBindings.findChildViewById(rootView, id);
      if (rocker == null) {
        break missingId;
      }

      id = R.id.tvPassword;
      TextView tvPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvPassword == null) {
        break missingId;
      }

      id = R.id.tvPasswordHint;
      TextView tvPasswordHint = ViewBindings.findChildViewById(rootView, id);
      if (tvPasswordHint == null) {
        break missingId;
      }

      return new DialogRockerBinding((ConstraintLayout) rootView, btnBackspace, btnQuestion,
          btnRockerNegative, btnRockerPositive, cardPassword, cardPasswordText,
          constraintLayoutCross, cross, rocker, tvPassword, tvPasswordHint);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
