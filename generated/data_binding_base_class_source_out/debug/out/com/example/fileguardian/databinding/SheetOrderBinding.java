// Generated by view binder compiler. Do not edit!
package com.example.fileguardian.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fileguardian.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SheetOrderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imgOrderAscendCheck;

  @NonNull
  public final ImageView imgOrderAscendIcon;

  @NonNull
  public final ImageView imgOrderDescendCheck;

  @NonNull
  public final ImageView imgOrderDescendIcon;

  @NonNull
  public final TextView tvOrderAscend;

  @NonNull
  public final TextView tvOrderDescend;

  @NonNull
  public final TextView tvOrderTitle;

  private SheetOrderBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imgOrderAscendCheck, @NonNull ImageView imgOrderAscendIcon,
      @NonNull ImageView imgOrderDescendCheck, @NonNull ImageView imgOrderDescendIcon,
      @NonNull TextView tvOrderAscend, @NonNull TextView tvOrderDescend,
      @NonNull TextView tvOrderTitle) {
    this.rootView = rootView;
    this.imgOrderAscendCheck = imgOrderAscendCheck;
    this.imgOrderAscendIcon = imgOrderAscendIcon;
    this.imgOrderDescendCheck = imgOrderDescendCheck;
    this.imgOrderDescendIcon = imgOrderDescendIcon;
    this.tvOrderAscend = tvOrderAscend;
    this.tvOrderDescend = tvOrderDescend;
    this.tvOrderTitle = tvOrderTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SheetOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SheetOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.sheet_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SheetOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgOrderAscendCheck;
      ImageView imgOrderAscendCheck = ViewBindings.findChildViewById(rootView, id);
      if (imgOrderAscendCheck == null) {
        break missingId;
      }

      id = R.id.imgOrderAscendIcon;
      ImageView imgOrderAscendIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgOrderAscendIcon == null) {
        break missingId;
      }

      id = R.id.imgOrderDescendCheck;
      ImageView imgOrderDescendCheck = ViewBindings.findChildViewById(rootView, id);
      if (imgOrderDescendCheck == null) {
        break missingId;
      }

      id = R.id.imgOrderDescendIcon;
      ImageView imgOrderDescendIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgOrderDescendIcon == null) {
        break missingId;
      }

      id = R.id.tvOrderAscend;
      TextView tvOrderAscend = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderAscend == null) {
        break missingId;
      }

      id = R.id.tvOrderDescend;
      TextView tvOrderDescend = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderDescend == null) {
        break missingId;
      }

      id = R.id.tvOrderTitle;
      TextView tvOrderTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvOrderTitle == null) {
        break missingId;
      }

      return new SheetOrderBinding((ConstraintLayout) rootView, imgOrderAscendCheck,
          imgOrderAscendIcon, imgOrderDescendCheck, imgOrderDescendIcon, tvOrderAscend,
          tvOrderDescend, tvOrderTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
