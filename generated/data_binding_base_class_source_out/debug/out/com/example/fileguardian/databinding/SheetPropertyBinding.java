// Generated by view binder compiler. Do not edit!
package com.example.fileguardian.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fileguardian.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SheetPropertyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imgPropertyDateCheck;

  @NonNull
  public final ImageView imgPropertyDateIcon;

  @NonNull
  public final ImageView imgPropertyNullCheck;

  @NonNull
  public final ImageView imgPropertyNullIcon;

  @NonNull
  public final ImageView imgPropertySizeCheck;

  @NonNull
  public final ImageView imgPropertySizeIcon;

  @NonNull
  public final ImageView imgPropertyTypeCheck;

  @NonNull
  public final ImageView imgPropertyTypeIcon;

  @NonNull
  public final TextView tvPropertyDate;

  @NonNull
  public final TextView tvPropertyNull;

  @NonNull
  public final TextView tvPropertySize;

  @NonNull
  public final TextView tvPropertyTitle;

  @NonNull
  public final TextView tvPropertyType;

  private SheetPropertyBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imgPropertyDateCheck, @NonNull ImageView imgPropertyDateIcon,
      @NonNull ImageView imgPropertyNullCheck, @NonNull ImageView imgPropertyNullIcon,
      @NonNull ImageView imgPropertySizeCheck, @NonNull ImageView imgPropertySizeIcon,
      @NonNull ImageView imgPropertyTypeCheck, @NonNull ImageView imgPropertyTypeIcon,
      @NonNull TextView tvPropertyDate, @NonNull TextView tvPropertyNull,
      @NonNull TextView tvPropertySize, @NonNull TextView tvPropertyTitle,
      @NonNull TextView tvPropertyType) {
    this.rootView = rootView;
    this.imgPropertyDateCheck = imgPropertyDateCheck;
    this.imgPropertyDateIcon = imgPropertyDateIcon;
    this.imgPropertyNullCheck = imgPropertyNullCheck;
    this.imgPropertyNullIcon = imgPropertyNullIcon;
    this.imgPropertySizeCheck = imgPropertySizeCheck;
    this.imgPropertySizeIcon = imgPropertySizeIcon;
    this.imgPropertyTypeCheck = imgPropertyTypeCheck;
    this.imgPropertyTypeIcon = imgPropertyTypeIcon;
    this.tvPropertyDate = tvPropertyDate;
    this.tvPropertyNull = tvPropertyNull;
    this.tvPropertySize = tvPropertySize;
    this.tvPropertyTitle = tvPropertyTitle;
    this.tvPropertyType = tvPropertyType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SheetPropertyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SheetPropertyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.sheet_property, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SheetPropertyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgPropertyDateCheck;
      ImageView imgPropertyDateCheck = ViewBindings.findChildViewById(rootView, id);
      if (imgPropertyDateCheck == null) {
        break missingId;
      }

      id = R.id.imgPropertyDateIcon;
      ImageView imgPropertyDateIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgPropertyDateIcon == null) {
        break missingId;
      }

      id = R.id.imgPropertyNullCheck;
      ImageView imgPropertyNullCheck = ViewBindings.findChildViewById(rootView, id);
      if (imgPropertyNullCheck == null) {
        break missingId;
      }

      id = R.id.imgPropertyNullIcon;
      ImageView imgPropertyNullIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgPropertyNullIcon == null) {
        break missingId;
      }

      id = R.id.imgPropertySizeCheck;
      ImageView imgPropertySizeCheck = ViewBindings.findChildViewById(rootView, id);
      if (imgPropertySizeCheck == null) {
        break missingId;
      }

      id = R.id.imgPropertySizeIcon;
      ImageView imgPropertySizeIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgPropertySizeIcon == null) {
        break missingId;
      }

      id = R.id.imgPropertyTypeCheck;
      ImageView imgPropertyTypeCheck = ViewBindings.findChildViewById(rootView, id);
      if (imgPropertyTypeCheck == null) {
        break missingId;
      }

      id = R.id.imgPropertyTypeIcon;
      ImageView imgPropertyTypeIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgPropertyTypeIcon == null) {
        break missingId;
      }

      id = R.id.tvPropertyDate;
      TextView tvPropertyDate = ViewBindings.findChildViewById(rootView, id);
      if (tvPropertyDate == null) {
        break missingId;
      }

      id = R.id.tvPropertyNull;
      TextView tvPropertyNull = ViewBindings.findChildViewById(rootView, id);
      if (tvPropertyNull == null) {
        break missingId;
      }

      id = R.id.tvPropertySize;
      TextView tvPropertySize = ViewBindings.findChildViewById(rootView, id);
      if (tvPropertySize == null) {
        break missingId;
      }

      id = R.id.tvPropertyTitle;
      TextView tvPropertyTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvPropertyTitle == null) {
        break missingId;
      }

      id = R.id.tvPropertyType;
      TextView tvPropertyType = ViewBindings.findChildViewById(rootView, id);
      if (tvPropertyType == null) {
        break missingId;
      }

      return new SheetPropertyBinding((ConstraintLayout) rootView, imgPropertyDateCheck,
          imgPropertyDateIcon, imgPropertyNullCheck, imgPropertyNullIcon, imgPropertySizeCheck,
          imgPropertySizeIcon, imgPropertyTypeCheck, imgPropertyTypeIcon, tvPropertyDate,
          tvPropertyNull, tvPropertySize, tvPropertyTitle, tvPropertyType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
