// Generated by view binder compiler. Do not edit!
package com.example.fileguardian.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fileguardian.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SheetSortBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imgSortDateCheck;

  @NonNull
  public final ImageView imgSortDateIcon;

  @NonNull
  public final ImageView imgSortNameCheck;

  @NonNull
  public final ImageView imgSortNameIcon;

  @NonNull
  public final ImageView imgSortSizeCheck;

  @NonNull
  public final ImageView imgSortSizeIcon;

  @NonNull
  public final TextView tvSortDate;

  @NonNull
  public final TextView tvSortName;

  @NonNull
  public final TextView tvSortSize;

  @NonNull
  public final TextView tvSortTitle;

  private SheetSortBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imgSortDateCheck,
      @NonNull ImageView imgSortDateIcon, @NonNull ImageView imgSortNameCheck,
      @NonNull ImageView imgSortNameIcon, @NonNull ImageView imgSortSizeCheck,
      @NonNull ImageView imgSortSizeIcon, @NonNull TextView tvSortDate,
      @NonNull TextView tvSortName, @NonNull TextView tvSortSize, @NonNull TextView tvSortTitle) {
    this.rootView = rootView;
    this.imgSortDateCheck = imgSortDateCheck;
    this.imgSortDateIcon = imgSortDateIcon;
    this.imgSortNameCheck = imgSortNameCheck;
    this.imgSortNameIcon = imgSortNameIcon;
    this.imgSortSizeCheck = imgSortSizeCheck;
    this.imgSortSizeIcon = imgSortSizeIcon;
    this.tvSortDate = tvSortDate;
    this.tvSortName = tvSortName;
    this.tvSortSize = tvSortSize;
    this.tvSortTitle = tvSortTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SheetSortBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SheetSortBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.sheet_sort, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SheetSortBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgSortDateCheck;
      ImageView imgSortDateCheck = ViewBindings.findChildViewById(rootView, id);
      if (imgSortDateCheck == null) {
        break missingId;
      }

      id = R.id.imgSortDateIcon;
      ImageView imgSortDateIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgSortDateIcon == null) {
        break missingId;
      }

      id = R.id.imgSortNameCheck;
      ImageView imgSortNameCheck = ViewBindings.findChildViewById(rootView, id);
      if (imgSortNameCheck == null) {
        break missingId;
      }

      id = R.id.imgSortNameIcon;
      ImageView imgSortNameIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgSortNameIcon == null) {
        break missingId;
      }

      id = R.id.imgSortSizeCheck;
      ImageView imgSortSizeCheck = ViewBindings.findChildViewById(rootView, id);
      if (imgSortSizeCheck == null) {
        break missingId;
      }

      id = R.id.imgSortSizeIcon;
      ImageView imgSortSizeIcon = ViewBindings.findChildViewById(rootView, id);
      if (imgSortSizeIcon == null) {
        break missingId;
      }

      id = R.id.tvSortDate;
      TextView tvSortDate = ViewBindings.findChildViewById(rootView, id);
      if (tvSortDate == null) {
        break missingId;
      }

      id = R.id.tvSortName;
      TextView tvSortName = ViewBindings.findChildViewById(rootView, id);
      if (tvSortName == null) {
        break missingId;
      }

      id = R.id.tvSortSize;
      TextView tvSortSize = ViewBindings.findChildViewById(rootView, id);
      if (tvSortSize == null) {
        break missingId;
      }

      id = R.id.tvSortTitle;
      TextView tvSortTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSortTitle == null) {
        break missingId;
      }

      return new SheetSortBinding((ConstraintLayout) rootView, imgSortDateCheck, imgSortDateIcon,
          imgSortNameCheck, imgSortNameIcon, imgSortSizeCheck, imgSortSizeIcon, tvSortDate,
          tvSortName, tvSortSize, tvSortTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
